"""Initial migration

Revision ID: a4e96b89237e
Revises: 
Create Date: 2024-09-25 02:04:47.106126

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a4e96b89237e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('environments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_environments_id'), 'environments', ['id'], unique=False)
    op.create_index(op.f('ix_environments_name'), 'environments', ['name'], unique=True)
    op.create_table('webapp_deploys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('webapp_id', sa.Integer(), nullable=False),
    sa.Column('workload_id', sa.Integer(), nullable=False),
    sa.Column('environment_id', sa.Integer(), nullable=False),
    sa.Column('cpu_scaling_threshold', sa.Integer(), nullable=True),
    sa.Column('memory_scaling_threshold', sa.Integer(), nullable=True),
    sa.Column('custom_metrics', sa.JSON(), nullable=False),
    sa.Column('endpoints', sa.JSON(), nullable=False),
    sa.Column('envs', sa.JSON(), nullable=True),
    sa.Column('secrets', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ),
    sa.ForeignKeyConstraint(['webapp_id'], ['webapps.id'], ),
    sa.ForeignKeyConstraint(['workload_id'], ['workloads.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('environment_id', 'uuid', name='uix_environment_uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_webapp_deploys_id'), 'webapp_deploys', ['id'], unique=False)
    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('webapp_deploy_id', sa.Integer(), nullable=False),
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.id'], ),
    sa.ForeignKeyConstraint(['webapp_deploy_id'], ['webapp_deploys.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cluster_id', 'uuid', name='instance_cluster_uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_instances_id'), 'instances', ['id'], unique=False)
    op.add_column('clusters', sa.Column('environment_id', sa.Integer(), nullable=False))
    op.create_unique_constraint('uix_cluster_uuid', 'clusters', ['uuid'])
    op.create_foreign_key(None, 'clusters', 'environments', ['environment_id'], ['id'])
    op.drop_constraint('webapps_workload_id_fkey', 'webapps', type_='foreignkey')
    op.drop_column('webapps', 'version')
    op.drop_column('webapps', 'envs')
    op.drop_column('webapps', 'custom_metrics')
    op.drop_column('webapps', 'workload_id')
    op.drop_column('webapps', 'memory_scaling_threshold')
    op.drop_column('webapps', 'secrets')
    op.drop_column('webapps', 'endpoints')
    op.drop_column('webapps', 'image')
    op.drop_column('webapps', 'cpu_scaling_threshold')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('webapps', sa.Column('cpu_scaling_threshold', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('endpoints', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('webapps', sa.Column('secrets', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('memory_scaling_threshold', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('workload_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('custom_metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('webapps', sa.Column('envs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('webapps', sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('webapps_workload_id_fkey', 'webapps', 'workloads', ['workload_id'], ['id'])
    op.drop_constraint(None, 'clusters', type_='foreignkey')
    op.drop_constraint('uix_cluster_uuid', 'clusters', type_='unique')
    op.drop_column('clusters', 'environment_id')
    op.drop_index(op.f('ix_instances_id'), table_name='instances')
    op.drop_table('instances')
    op.drop_index(op.f('ix_webapp_deploys_id'), table_name='webapp_deploys')
    op.drop_table('webapp_deploys')
    op.drop_index(op.f('ix_environments_name'), table_name='environments')
    op.drop_index(op.f('ix_environments_id'), table_name='environments')
    op.drop_table('environments')
    # ### end Alembic commands ###
